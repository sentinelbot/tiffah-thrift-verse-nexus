
import { Printer } from 'lucide-react';
import { Button } from '@/components/ui/button';
import PrintDialog from './PrintDialog';
import { printShippingLabel, downloadShippingLabel } from '@/services/printNodeService';
import { useAuth } from '@/contexts/AuthContext';
import { Order } from '@/types/order';

interface ShippingLabelPrintProps {
  order: Order;
  variant?: 'default' | 'outline' | 'secondary' | 'ghost';
  size?: 'default' | 'sm' | 'lg' | 'icon';
}

const ShippingLabelPrint = ({ order, variant = 'default', size = 'default' }: ShippingLabelPrintProps) => {
  const { user } = useAuth();
  
  // Handle print action
  const handlePrint = async (printerId: string) => {
    if (!user) return false;
    
    try {
      return await printShippingLabel(order, printerId, user.id);
    } catch (error) {
      console.error('Error printing shipping label:', error);
      return false;
    }
  };
  
  // Handle download action
  const handleDownload = () => {
    try {
      downloadShippingLabel(order);
    } catch (error) {
      console.error('Error generating shipping label PDF:', error);
    }
  };
  
  // Shipping label preview component
  const PreviewContent = () => (
    <div className="w-full overflow-auto bg-white text-black p-4 rounded-md scale-[0.85] origin-top">
      <div className="w-[4in] h-[6in] border border-dashed border-gray-300 p-4 mx-auto bg-white text-black">
        <div className="text-center border-b border-black pb-2 mb-4">
          <div className="font-bold text-lg">Tiffah Thrift Store</div>
          <div className="text-sm">123 Thrift Ave, Nairobi, Kenya</div>
        </div>
        
        <div className="text-center my-4">
          <div className="font-mono text-lg">*{order.orderNumber}*</div>
          <div className="text-xs">{order.orderNumber}</div>
        </div>
        
        <div className="font-bold text-sm">SHIP TO:</div>
        
        <div className="border border-black p-2 my-2">
          <div className="font-bold">{order.shippingInfo.fullName}</div>
          <div>{order.shippingInfo.address}</div>
          <div>{order.shippingInfo.city}, {order.shippingInfo.state} {order.shippingInfo.postalCode}</div>
          <div>{order.shippingInfo.country}</div>
          <div className="mt-2">Phone: {order.shippingInfo.phone}</div>
        </div>
        
        <div className="text-sm mt-4">
          <div><strong>Order:</strong> {order.orderNumber}</div>
          <div><strong>Date:</strong> {new Date(order.orderDate).toLocaleDateString()}</div>
          <div><strong>Shipping:</strong> {order.shippingInfo.shippingMethod === 'express' ? 'EXPRESS' : 'STANDARD'}</div>
          <div><strong>Items:</strong> {order.items.reduce((sum, item) => sum + item.quantity, 0)}</div>
        </div>
        
        <div className="text-center text-xs absolute bottom-4 left-0 right-0">
          This label was generated by Tiffah Thrift Store<br />
          For questions, call: +254 700 000000
        </div>
      </div>
    </div>
  );
  
  return (
    <PrintDialog
      title="Print Shipping Label"
      description="Preview and print shipping label for this order"
      previewContent={<PreviewContent />}
      onPrint={handlePrint}
      onDownload={handleDownload}
    >
      <Button variant={variant} size={size}>
        <Printer className={`${size === 'icon' ? 'h-4 w-4' : 'h-4 w-4 mr-2'}`} />
        {size !== 'icon' && 'Shipping Label'}
      </Button>
    </PrintDialog>
  );
};

export default ShippingLabelPrint;
